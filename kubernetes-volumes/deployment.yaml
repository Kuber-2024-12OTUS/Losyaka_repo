apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: homework
  labels:
    app: web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      nodeSelector:
        homework: "true"
      containers:
      - name: nginx
        image: nginx:1.27.3
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: web-pvc
          mountPath: /homework
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: random
          mountPath: /homework/conf/
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","rm /homework/index.html"]
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: 8000
      initContainers:
      - name: get-otus
        image: curlimages/curl
        command: ['sh', '-c', "curl -k https://otus.ru >> /init/index.html"]
        volumeMounts:
        - name: web-pvc
          mountPath: /init
      volumes:
      - name: web-pvc
        persistentVolumeClaim:
          claimName: web
      - name: nginx-config
        configMap:
          name: config
          items:
          - key: default.conf
            path: default.conf
      - name: random
        configMap:
          name: config
          items:
          - key: test
            path: file
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
