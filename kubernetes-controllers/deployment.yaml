apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: homework
data:
  default.conf: |
    server {
          listen 8000;
          server_name  _;
          location / {
              root   /homework;
              index  index.html;
            }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: homework
  labels:
    app: web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      nodeSelector:
        homework: "true"
      containers:
      - name: nginx
        image: nginx:1.27.3
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: empty-volume
          mountPath: /homework
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","rm /homework/index.html"]
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - test -f /homework/index.html
      initContainers:
      - name: get-otus
        image: curlimages/curl
        command: ['sh', '-c', "curl -k https://otus.ru >> /init/index.html"]
        volumeMounts:
        - name: empty-volume
          mountPath: /init
      volumes:
      - name: empty-volume
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: web
#  namespace: homework
#spec:
#  ports:
#  - port: 8000
#    targetPort: 8000
#    protocol: TCP
#  selector:
#    app: web
#  type: NodePort
# kubectl label nodes minikube homework=true